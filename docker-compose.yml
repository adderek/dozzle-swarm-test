services:
  manager:
    image: docker:dind
    privileged: true
    hostname: manager
    ports:
      - "8080:8080"
      - "2375"        # Expose Docker daemon on TCP 2375
    volumes:
      - manager-data:/var/lib/docker
      - ./swarm:/swarm
    environment:
      - DOCKER_TLS_CERTDIR=
      - DOCKER_TLS_VERIFY=0
      - DOCKER_HOST=tcp://0.0.0.0:2375
      - ADVERTISE_ADDR=eth0
    command: ["--storage-driver=overlay2", "--host=tcp://0.0.0.0:2375", "--host=unix:///var/run/docker.sock"]
    networks:
      - swarm-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "sh", "-c", "DOCKER_TLS_VERIFY= DOCKER_HOST=tcp://localhost:2375 /usr/local/bin/docker info"]
      interval: 10s
      timeout: 5s
      start_period: 30s
      retries: 3


  worker1:
    image: docker:dind
    privileged: true
    hostname: worker1
    expose:
      - "2375"  # Expose Docker daemon on TCP 2375
    volumes:
      - worker1-data:/var/lib/docker
    environment:
      - DOCKER_TLS_CERTDIR=
      - DOCKER_TLS_VERIFY=0
      - DOCKER_HOST=tcp://0.0.0.0:2375
      - ADVERTISE_ADDR=eth0
    command: ["--storage-driver=overlay2", "--host=tcp://0.0.0.0:2375", "--host=unix:///var/run/docker.sock"]
    depends_on:
      manager:
        condition: service_healthy
    networks:
      - swarm-network
    deploy:
      replicas: 1
    healthcheck:
      test: ["CMD", "sh", "-c", "DOCKER_TLS_VERIFY= DOCKER_HOST=tcp://localhost:2375 /usr/local/bin/docker info"]
      interval: 10s
      timeout: 5s
      start_period: 30s
      retries: 3

  worker2:
    image: docker:dind
    privileged: true
    hostname: worker2
    expose:
      - "2375"  # Expose Docker daemon on TCP 2375
    volumes:
      - worker2-data:/var/lib/docker
    environment:
      - DOCKER_TLS_CERTDIR=
      - DOCKER_TLS_VERIFY=0
      - DOCKER_HOST=tcp://0.0.0.0:2375
      - ADVERTISE_ADDR=eth0
    command: ["--storage-driver=overlay2", "--host=tcp://0.0.0.0:2375", "--host=unix:///var/run/docker.sock"]
    depends_on:
      manager:
        condition: service_healthy
    networks:
      - swarm-network
    deploy:
      replicas: 1
    healthcheck:
      test: ["CMD", "sh", "-c", "DOCKER_TLS_VERIFY= DOCKER_HOST=tcp://localhost:2375 /usr/local/bin/docker info"]
      interval: 10s
      timeout: 5s
      start_period: 30s
      retries: 3

  worker3:
    image: docker:dind
    privileged: true
    hostname: worker3
    expose:
      - "2375"  # Expose Docker daemon on TCP 2375
    volumes:
      - worker3-data:/var/lib/docker
    environment:
      - DOCKER_TLS_CERTDIR=
      - DOCKER_TLS_VERIFY=0
      - DOCKER_HOST=tcp://0.0.0.0:2375
      - ADVERTISE_ADDR=eth0
    command: ["--storage-driver=overlay2", "--host=tcp://0.0.0.0:2375", "--host=unix:///var/run/docker.sock"]
    depends_on:
      manager:
        condition: service_healthy
    networks:
      - swarm-network
    deploy:
      replicas: 1
    healthcheck:
      test: ["CMD", "sh", "-c", "DOCKER_TLS_VERIFY= DOCKER_HOST=tcp://localhost:2375 /usr/local/bin/docker info"]
      interval: 10s
      timeout: 5s
      start_period: 30s
      retries: 3

  swarm-setup:
    image: docker:20.10.24-cli-alpine3.17
    container_name: ${COMPOSE_PROJECT_NAME}-setup
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./swarm:/swarm
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DOCKER_TLS_VERIFY=
      - DOCKER_TLS_CERTDIR=
      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME:-dozzle}
    depends_on:
      manager:
        condition: service_healthy
      worker1:
        condition: service_healthy
      worker2:
        condition: service_healthy
      worker3:
        condition: service_healthy
    networks:
      - swarm-network
    command: sh -c "apk add --no-cache jq && chmod +x /swarm/setup.sh && /swarm/setup.sh"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

networks:
  swarm-network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1400
    ipam:
      driver: default
      config:
        - subnet: 10.10.0.0/24

volumes:
  manager-data:
  worker1-data:
  worker2-data:
  worker3-data:
  docker-sockets: